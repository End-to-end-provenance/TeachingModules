dir()
lintr::lint("API.R")
lintr::lint("API.R")
lintr::lint("API.R")
lintr::lint("API.R")
lintr::lint("API.R")
lintr::lint("API.R")
isTRUE
lintr::lint("API.R")
lintr::lint("API.R")
lintr::lint("API.R")
lintr::lint("API.R")
lintr::lint("API.R")
lintr::lint("API.R")
lintr::lint("API.R")
lintr::lint("API.R")
dir()
lintr::lint("DataNodes.R")
lintr::lint("DataNodes.R")
lintr::lint("DataNodes.R")
lintr::lint("DDGCheckpoint.R")
lintr::lint("DDGHash.R")
lintr::lint("DDGHash.R")
lintr::lint("DDGStatement.R")
lintr::lint("DDGStatement.R")
dir()
lintr::lint("Edges.R")
lintr::lint("Edges.R")
lintr::lint("Functions.R")
lintr::lint("Functions.R")
lintr::lint("IOTrace.R")
lintr::lint("IOTrace.R")
lintr::lint("IOTrace.R")
lintr::lint("IOTrace.R")
lintr::lint("IOTrace.R")
lintr::lint("Loops.R")
lintr::lint("OutputJSON.R")
lintr::lint("OutputJSON.R")
lintr::lint("OutputJSON.R")
lintr::lint("OutputJSON.R")
dir()
lintr::lint("ProcNodes.R")
lintr::lint("ProcNodes.R")
lintr::lint("RDataTracker.R")
lintr::lint("RDataTracker.R")
lintr::lint("RDataTracker.R")
lintr::lint("RDataTracker.R")
lintr::lint("ReturnValues.R")
lintr::lint("ReturnValues.R")
lintr::lint("SourcedScripts.R")
lintr::lint("Utilities.R")
lintr::lint("Utilities.R")
lintr::lint_package()
lintr::lint_package()
lintr::lint_package()
dir()
lintr::lint("Annotation.R")
lintr::lint("Annotation.R")
lintr::lint("API.R")
lintr::lint("DataNodes.R")
lintr::lint("DDGHash.R")
lintr::lint("DDGStatement.R")
lintr::lint("Edges.R")
lintr::lint("Functions.R")
lintr::lint("IOTrace.R")
lintr::lint("Loops.R")
lintr::lint("OutputJSON.R")
lintr::lint("ProcNodes.R")
dir()
lintr::lint("RDataTracker.R")
lintr::lint("ReturnValues.R")
lintr::lint("SourcedScripts.R")
lintr::lint("Utilities.R")
setwd("inst/tests")
setwd("../inst/tests")
dir()
testdir()
library(testthat)
test_dir(".")
dir()
test_dir(".")
test_file("API_test.R")
test_file("API_test.R")
test_file("API_test.R")
test_file("API_test.R")
test_file("API_test.R")
test_file("API_test.R")
dir()
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
RDataTracker:::.ddg.find.var.uses (parse (text = "if (x > 1 ) a <- b + c else d <- e + f"))
RDataTracker:::.ddg.find.var.uses (parse (text = "if (x > 1 ) a <- b + c else d <- e + f"))
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
.ddg.find.calls (parse (text = "a <- b()")[[1]])
RDataTracker:::.ddg.find.calls (parse (text = "a <- b()")[[1]])
test_file("DDGStatement_test.R")
RDataTracker:::.ddg.find.calls(parse(text = "a <- b")[[1]])
test_file("DDGStatement_test.R")
library(help = "utils")
RDataTracker:::.ddg.find.calls (parse (text = "a <- utils::alarm()")[[1]])
RDataTracker:::.ddg.find.calls (parse (text = "a <- utils::alarm()")[[1]])[[3]]
str(RDataTracker:::.ddg.find.calls (parse (text = "a <- utils::alarm()")[[1]])[[3]])
str(RDataTracker:::.ddg.find.calls (parse (text = "a <- utils::alarm()")[[1]])[[3]])
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
str(RDataTracker:::.ddg.find.calls (parse (text = "a <- utils::alarm()")[[1]])[[3]])
ddg.fun <- c("utils")
ddg.lib <- c("alarm")
expected.lib.calls <- data.frame(ddg.fun, ddg.lib)
expected.lib.calls
str(expected.lib.calls)
ddg.fun <- c("utils")
ddg.lib <- c("alarm")
expected.lib.calls <- data.frame(ddg.fun, ddg.lib)
str(expected.lib.calls)
str(RDataTracker:::.ddg.find.calls (parse (text = "a <- utils::alarm()")[[1]])[[3]])
test_file("DDGStatement_test.R")
test_file("DDGStatement_test.R")
test_file("Utilities_test.R")
test_file("Utilities_test.R")
strftime
format
test_file("Utilities_test.R")
test_file("Utilities_test.R")
test_file("Utilities_test.R")
test_file("API_test.R")
test_file("API_test.R")
test_file("API_test.R")
myEnv <- emptyenv()
View(myEnv)
myEnv$foo <- 1
assign(foo, 1, envir=myEnv)
assign("foo", 1, envir=myEnv)
myEnv <- new.env()
assign("foo", 1, envir=myEnv)
View(myEnv)
myEnv$foo
View(myEnv)
View(myEnv)
myEnv
test_file("Utilities_test.R")
getwd()
setwd("~/Documents/Process/DataProvenance/github/RDataTracker")
test_file("Utilities_test.R")
setwd("R")
test_file("Utilities_test.R")
setwd("../inst/tests")
test_file("Utilities_test.R")
test_file(".")
test_dir(".")
test_package(RDataTracker)
test_package("RDataTracker")
test_dir(".")
test_package("RDataTracker")
detach("package:RDataTracker", unload=TRUE)
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
test_package("RDataTracker")
setwd("~/Documents/Process/DataProvenance/github/RDataTracker/tests")
source("testthat.R")
detach("package:RDataTracker", unload=TRUE)
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
source("testthat.R")
pwd()
getwd()
dir()
test_package("RDataTracker")
setwd("..")
test_package("RDataTracker")
setwd("~/Documents/Process/DataProvenance/github/RDataTracker/tests/testthat")
dir()
test_file("testDDGStatement.R")
RDataTracker:::.ddg.find.calls (parse (text = "a <- utils::alarm()")[[1]])
detach("package:RDataTracker", unload=TRUE)
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
RDataTracker:::.ddg.find.var.uses (parse (text = "if (x > 1 ) a <- b + c else d <- e + f"))
detach("package:RDataTracker", unload=TRUE)
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
RDataTracker:::.ddg.find.var.uses (parse (text = "if (x > 1 ) a <- b + c else d <- e + f"))
RDataTracker:::.ddg.find.var.uses (parse (text = "a[[b]] <- 3"))
detach("package:RDataTracker", unload=TRUE)
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
RDataTracker:::.ddg.find.var.uses (parse (text = "a[[b]] <- 3"))
detach("package:RDataTracker", unload=TRUE)
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
RDataTracker:::.ddg.find.var.uses (parse (text = "a[[b]] <- 3"))
detach("package:RDataTracker", unload=TRUE)
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
RDataTracker:::.ddg.find.var.uses (parse (text = "a[[b]] <- 3"))
parsed <- parse (text="a[b]")
parsed
is.call(parsed)
is.call(parsed[[1]])
parsed[[1]]
parsed[[1]][[1]]
parsed[[1]][[1]] == "["
parsed[[1]][[1]] %in% c("[")
parsed <- parse (text="a[[b]]")
parsed[[1]][[1]] == "[["
parsed[[1]][[1]] == "["
RDataTracker:::.ddg.find.var.uses (parse (text = "a[[b]] <- 3"))
detach("package:RDataTracker", unload=TRUE)
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
RDataTracker:::.ddg.find.var.uses (parse (text = "a[[b]] <- 3"))
v <- c (1, 2, 3)
c(v, 4)
RDataTracker:::.ddg.find.var.uses (parse (text = "g()"))
RDataTracker:::.ddg.find.var.uses (parse (text = "a <- g()"))
parsed <- parse (text="RDataTracker:::.ddg.eval('a <- 1')")
parsed
parsed[[1]]
parsed[[1]][[1]]
is.call(parsed[[1]][[1]])
call
tree <- call(call(":::", "RDataTracker", ".ddg.eval"), paste(deparse(statement), collapse=""),
function() parsed.stmt)
l <- list(list (":::", "RDataTracker", ".ddg.eval"), "a <- 1")
l
as.call(l)
is.call(as.call(l))
l <- list(call (":::", "RDataTracker", ".ddg.eval"), "a <- 1")
as.call(l)
tree <- call(call(":::", as.name(RDataTracker), as.name(.ddg.eval)), paste(deparse(statement), collapse=""),
function() parsed.stmt)
tree <- call(call(":::", as.symbol(RDataTracker), as.name(.ddg.eval)), paste(deparse(statement), collapse=""),
function() parsed.stmt)
parsed <- parse ("RDataTracker:::ddg.eval ('a <- 1')")
parsed <- parse (text="RDataTracker:::ddg.eval ('a <- 1')")
parsed
parsed[[1]]
parsed[[1]][[1]]
parsed[[1]][[1]][[1]]
parsed[[1]][[1]][[2]]
is.name(parsed[[1]][[1]][[2]])
l2 <- list (RDataTracker:::ddg.eval, "a <- 1")
l2
as.call(l2)
evalList <- list (":::", quote(RDataTracker), quote(ddg.eval))
evalList
as.call(evalList)
evalList <- list ("`:::`", quote(RDataTracker), quote(ddg.eval))
as.call(evalList)
evalParsed <- parse (text="RDataTracker:::ddg.eval")
evalParsed
as.expression(evalList)
evalList <- list (":::", quote(RDataTracker), quote(ddg.eval))
as.expression(evalList)
evalParsed[[1]]
evalParsed[[1]][[1]]
evalList <- list (`:::`, quote(RDataTracker), quote(ddg.eval))
as.expression(evalList)
evalList <- list (quote(`:::`), quote(RDataTracker), quote(ddg.eval))
as.expression(evalList)
a <- 1
which(a)
env.profile()
ls ()
ls (.RGlobalEnv)
globalenv()
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:RDataTracker", unload=TRUE)
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.json()
library("provR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.save()
prov.quit()
library("provR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.quit()
prov.init()
a <- 1
b <- 2
prov.init()
detach("package:provR", unload=TRUE)
detach("package:provR", unload=TRUE)
prov.init()
library("provR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.init()
a <- 1
b <- 2
prov.init()
prov.quit()
library("provViz", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.visualize()
library("provR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.init()
a <- 1
b <- 2
prov.quit()
library("provViz", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.visualize()
library("provR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("provViz", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.init()
prov.init()
a <- 1
prov.quit()
prov.visualize()
library("provGraphR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:provParseR", unload=TRUE)
library("provParseR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("provParseR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("provParseR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
a <- NULL
is.null(a)
IS.NULL(a)
graph_from_adjacency_matrix
library("igraph", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
graph_from_adjacency_matrix
devtools::install_github("provtools/RDataTracker", ref="development")
devtools::install.github("End-to-end-provenance/provR_test", ref="development")
devtools::install_github("End-to-end-provenance/provR_test", ref="development")
devtools::install_github("End-to-end-provenance/provR_test", ref="development")
devtools::install_github("ProvTools/provGraphR", ref="development")
devtools::install_github("ProvTools/provParseR", ref="Rclean")
devtools::install_github("ProvTools/provGraphR", ref="Rclean")
devtools::install_github("ProvTools/provGraphR")
library("provGraphR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("provParseR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("provR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.init()
a <- 1
a <- a + 1
a <- a + 1
prov.quit()
graph <- create.graph ("/private/var/folders/66/3lfdj29j1wb48v_s298qtbwm0000gn/T/RtmpR6Vkx4/prov_console/prov.json")
graph
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.set.detail(1)
prov.init()
prov.annotate.on("f")
prov.annotate.off("g")
f <- function (x) {
if (x < 0) return (0)
else return (x - 1)
}
g <- function (x) {
return (x - 1)
}
f (3)
g (-3)
prov.quit()
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.set.detail(1)
prov.init()
prov.annotate.on("f")
prov.annotate.off("g")
f <- function (x) {
if (x < 0) return (0)
else return (x - 1)
}
g <- function (x) {
return (x - 1)
}
f (3)
g (-3)
prov.quit()
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.set.detail(1)
prov.init()
prov.annotate.on("f")
prov.annotate.off("g")
f <- function (x) {
if (x < 0) return (0)
else return (x - 1)
}
g <- function (x) {
return (x - 1)
}
f (3)
g (-3)
prov.quit()
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.set.detail(1)
prov.init()
prov.annotate.on("f")
prov.annotate.off("g")
f <- function (x) {
if (x < 0) return (0)
else return (x - 1)
}
g <- function (x) {
return (x - 1)
}
f (3)
g (-3)
prov.quit()
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.set.detail(1)
prov.init()
prov.annotate.on("f")
prov.annotate.off("g")
f <- function (x) {
if (x < 0) return (0)
else return (x - 1)
}
g <- function (x) {
return (x - 1)
}
f (3)
g (-3)
prov.quit()
install.packages("devtools")
library("RDataTracker", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.set.detail(1)
prov.init()
prov.annotate.on("f")
prov.annotate.off("g")
f <- function (x) {
if (x < 0) return (0)
else return (x - 1)
}
g <- function (x) {
return (x - 1)
}
f (3)
g (-3)
prov.quit()
install.packages("roxygen2")
library("rdtLite", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.init()
a <- 1
a <- a + 1
a <- a + 1
prov.quit()
library("provViz", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.visualize("/private/var/folders/66/3lfdj29j1wb48v_s298qtbwm0000gn/T/RtmpsQvzqa/prov_console/prov.json")
library("rdtLite", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("provViz", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
detach("package:provViz", unload=TRUE)
library("provViz", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
provViz::prov.visualize()
options()
Sys.getenv(R_HOME)
Sys.getenv("R_HOME")
library("provSummarizeR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
trace (set.seed, print("set.seed called"))
runif(3)
runif
seed <- .Random.seed
runif (3)
.Random.seed <- seed
runif (3)
library("provSummarizeR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("rdtLite")
setwd("~/Documents/Process/DataProvenance/Talks/Bryn Mawr 2:19/DailySolarRadiation")
prov.run("DailySolarRadiation.R")
library("rdtLite", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
prov.run("DailySolarRadiation.R")
provSummarizeR::prov.summarize()
provSummarizeR::prov.summarize.run("DailySolarRadiation.R", prov.dir=".")
dir ("prov")
dir()
dir ("prov_DailySolarRadiation")
dir ("prov_DailySolarRadiation/scripts")
dir ("prov_DailySolarRadiation/data")
provSummarizeR::prov.summarize.run("DailySolarRadiation.R", prov.dir=".", overwrite=FALSE)
dir()
file.remove("prov_DailySolarRadiation")
dir()
dir("prov_DailySolarRadiation_2019-02-10T16.17.34EST")
dir("prov_DailySolarRadiation_2019-02-10T16.17.34EST/data")
dir("prov_DailySolarRadiation_2019-02-10T16.17.34EST/scripts")
setwd("~/Documents/Process/DataProvenance/Papers/RJournal/scripts")
run("debugScript.R")
prov.run("debugScript.R")
debug.init()
library("provDebugR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
debug.init()
debug.error.trace()
debug.error.trace(stack.overflow = TRUE)
setwd("~/Documents/Process/DataProvenance/Talks/Bryn Mawr 2:19/BuggyCars2")
source("BuggyCars2.R")
debug.init("BuggyCars2.R")
debug.error.trace()
debug.error.trace(stack.overflow=TRUE)
setwd("~/Documents/Process/DataProvenance/Talks/Bryn Mawr 2:19/ProvenanceDemo/BuggyCars")
library (provDebugR)
debug.init("BuggyCars.R")
debug.browser()
setwd("~/Documents/Process/DataProvenance/Talks/Bryn Mawr 2:19/ProvenanceDemo/BuggyCars2")
debug.init("BuggyCars2.R")
debug.error.trace()
debug.error.trace(stack.overflow=TRUE)
source('~/Documents/Process/DataProvenance/Talks/Bryn Mawr 2:19/ProvenanceDemo/BuggyCars/BuggyCars.R')
debug.init("BuggyCars.R")
setwd("~/Documents/Process/DataProvenance/Talks/Bryn Mawr 2:19/ProvenanceDemo/BuggyCars")
setwd("~/Documents/Process/DataProvenance/Talks/Bryn Mawr 2:19/ProvenanceDemo/BuggyCars")
debug.init("BuggyCars.R")
debug.browser()
prov.run("MarkdownDemo.Rmd")
debug.from.line(15)
debug.lineage(15)
debug.lineage(mpg)
debug.lineage("mpg")
debug.init("BuggyCars2.R")
setwd("~/Documents/Process/DataProvenance/Talks/Bryn Mawr 2:19/ProvenanceDemo/BuggyCars2")
debug.init("BuggyCars2.R")
debug.error.trace()
debug.error.trace(stack.overflow = TRUE)
dir()
provViz::prov.visualize()
